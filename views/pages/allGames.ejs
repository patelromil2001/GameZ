<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Catalogue - GameZ</title>
    <link rel="stylesheet" href="/assets/css/allGames.css"/>
</head>
<body>
<%
const buildQueryString = (queryParams, excludeKey = null) => {
    const params = new URLSearchParams();
    for (const key in queryParams) {
        if (key !== excludeKey && queryParams[key] !== undefined && queryParams[key] !== '') {
            if (Array.isArray(queryParams[key])) {
                params.append(key, queryParams[key].join(','));
            } else {
                params.append(key, queryParams[key]);
            }
        }
    }
    return params.toString();
};

const currentQuery = typeof query !== 'undefined' ? query : {};
const baseQueryString = buildQueryString(currentQuery, 'page');

const currentGenres = (currentQuery.genres || '').split(',').filter(g => g);
const currentCategories = (currentQuery.categories || '').split(',').filter(c => c);
const currentSort = currentQuery.sort || 'release_date';
const currentMinPrice = currentQuery.minPrice || '';
const currentMaxPrice = currentQuery.maxPrice || '';

availableGenres = [
    'Action',
    'Adventure',
    'Animation & Modeling',
    'Audio Production',
    'Casual',
    'Design & Illustration',
    'Documentary',
    'Early Access',
    'Education',
    'Episodic',
    'Free To Play',
    'Game Development',
    'Indie',
    'Massively Multiplayer',
    'RPG',
    'Racing',
    'Short',
    'Simulation',
    'Sports',
    'Strategy'];

availableCategories = [
    'Single-player',
    'Multi-player',
    'Co-op',
    'PvP',
    'Shared/Split Screen',
    'MMO',
    'Cross-Platform Multiplayer',
    'Full controller support',
    'Includes level editor',
    'In-App Purchases',
    'Remote Play Together',
    'Steam Achievements',
    'Steam Cloud',
    'Steam Leaderboards',
    'Steam Trading Cards',
    'Steam Workshop',
    'VR Support'
]
%>

<div class="catalogue-container">
    <aside class="filters-sidebar">
        <h2>Filters & Sort</h2>
        <form action="/games/all-games" method="GET" id="filter-form">
            <fieldset>
                <legend>Sort By</legend>
                <label>
                    <input type="radio" name="sort"
                           value="release_date" <%= currentSort === 'release_date' ? 'checked' : '' %>>
                    Release Date (Oldest)
                </label>
                <label>
                    <input type="radio" name="sort"
                           value="-release_date" <%= currentSort === '-release_date' ? 'checked' : '' %>>
                    Release Date (Newest)
                </label>
                <label>
                    <input type="radio" name="sort" value="name" <%= currentSort === 'name' ? 'checked' : '' %>>
                    Name (A-Z)
                </label>
                <label>
                    <input type="radio" name="sort" value="-name" <%= currentSort === '-name' ? 'checked' : '' %>>
                    Name (Z-A)
                </label>
                <label>
                    <input type="radio" name="sort" value="price" <%= currentSort === 'price' ? 'checked' : '' %>>
                    Price (Low to High)
                </label>
                <label>
                    <input type="radio" name="sort" value="-price" <%= currentSort === '-price' ? 'checked' : '' %>>
                    Price (High to Low)
                </label>
                <label>
                    <input type="radio" name="sort"
                           value="-positive" <%= currentSort === '-positive' ? 'checked' : '' %>>
                    Reviews (Most Positive)
                </label>
                <label>
                    <input type="radio" name="sort"
                           value="-negative" <%= currentSort === '-negative' ? 'checked' : '' %>>
                    Reviews (Most Negative)
                </label>
            </fieldset>

            <fieldset class="price-range">
                <legend>Price Range</legend>
                <label for="minPrice">Min:</label>
                <input type="number" id="minPrice" name="minPrice" min="0" step="0.01" placeholder="e.g., 0"
                       value="<%= currentMinPrice %>">
                <br>
                <label for="maxPrice">Max:</label>
                <input type="number" id="maxPrice" name="maxPrice" min="0" step="0.01" placeholder="e.g., 60"
                       value="<%= currentMaxPrice %>">
            </fieldset>

            <fieldset>
                <legend>Genres</legend>
                <% availableGenres.forEach(genre => { %>
                    <label>
                        <input type="checkbox" name="genres_cb"
                               value="<%= genre %>" <%= currentGenres.includes(genre) ? 'checked' : '' %>>
                        <%= genre %>
                    </label>
                <% }) %>
            </fieldset>

            <fieldset>
                <legend>Categories</legend>
                <% availableCategories.forEach(category => { %>
                    <label>
                        <input type="checkbox" name="categories_cb"
                               value="<%= category %>" <%= currentCategories.includes(category) ? 'checked' : '' %>>
                        <%= category %>
                    </label>
                <% }) %>
            </fieldset>

            <fieldset>
                <legend>Platform</legend>
                <label>
                    <input type="checkbox" name="windows"
                           value="true" <%= currentQuery.windows === 'true' ? 'checked' : '' %>>
                    Windows
                </label>
                <label>
                    <input type="checkbox" name="mac" value="true" <%= currentQuery.mac === 'true' ? 'checked' : '' %>>
                    Mac
                </label>
                <label>
                    <input type="checkbox" name="linux"
                           value="true" <%= currentQuery.linux === 'true' ? 'checked' : '' %>>
                    Linux
                </label>
            </fieldset>

            <button type="submit">Apply Filters</button>
            <a href="/games/all-games" class="reset-button">Reset</a>
        </form>
    </aside>

    <div class="main-content">
        <header class="catalogue-header">
            <h1>Games Catalogue</h1>
            <div class="icon">ðŸŽ®</div>
            <p>Showing <%= games.length %> of <%= pagination.total %> results</p>
        </header>

        <section class="games-grid">
            <% if (games && games.length > 0) { %>
                <% games.forEach((game, index) => { %>
                    <a href="/games/game/<%= game._id %>">
                        <div class="game-card color-<%= index % 6 %>">
                            <img
                                    src="<%= game.header_image %>"
                                    alt="<%= game.name %>"
                                    class="game-image"
                            />
                            <h2 class="game-title"><%= game.name %></h2>
                        </div>
                    </a>
                <% }) %>
            <% } else { %>
                <p>No games found matching your criteria.</p>
            <% } %>
        </section>

        <footer class="pagination">
            <% if (pagination.hasPrev) { %>
                <a href="/games/all-games?<%= baseQueryString ? baseQueryString + '&' : '' %>page=<%= pagination.currentPage - 1 %>">Prev</a>
            <% } %>
            <%
            let startPage = Math.max(1, pagination.currentPage - 2);
            let endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
            if (pagination.currentPage <= 2) {
                endPage = Math.min(5, pagination.totalPages);
            }
            if (pagination.currentPage >= pagination.totalPages - 1) {
                startPage = Math.max(1, pagination.totalPages - 4);
            }
            %>
            <% for (let i = startPage; i <= endPage; i++) { %>
                <a
                        href="/games/all-games?<%= baseQueryString ? baseQueryString + '&' : '' %>page=<%= i %>"
                        class="<%= i === pagination.currentPage ? 'active' : '' %>"
                >
                    <%= i %>
                </a>
            <% } %>
            <% if (pagination.hasNext) { %>
                <a href="/games/all-games?<%= baseQueryString ? baseQueryString + '&' : '' %>page=<%= pagination.currentPage + 1 %>">Next</a>
            <% } %>
        </footer>
    </div>
</div>

<script>
    const filterForm = document.getElementById('filter-form');

    filterForm.addEventListener('submit', (event) => {
        const genreCheckboxes = filterForm.querySelectorAll('input[name="genres_cb"]:checked');
        const selectedGenres = Array.from(genreCheckboxes).map(cb => cb.value);
        const existingHiddenGenre = filterForm.querySelector('input[name="genres"][type="hidden"]');
        if (existingHiddenGenre) {
            existingHiddenGenre.remove();
        }
        if (selectedGenres.length > 0) {
            const hiddenGenres = document.createElement('input');
            hiddenGenres.type = 'hidden';
            hiddenGenres.name = 'genres';
            hiddenGenres.value = selectedGenres.join(',');
            filterForm.appendChild(hiddenGenres);
        }
        filterForm.querySelectorAll('input[name="genres_cb"]').forEach(cb => cb.disabled = true);

        const categoryCheckboxes = filterForm.querySelectorAll('input[name="categories_cb"]:checked');
        const selectedCategories = Array.from(categoryCheckboxes).map(cb => cb.value);
        const existingHiddenCategory = filterForm.querySelector('input[name="categories"][type="hidden"]');
        if (existingHiddenCategory) {
            existingHiddenCategory.remove();
        }
        if (selectedCategories.length > 0) {
            const hiddenCategories = document.createElement('input');
            hiddenCategories.type = 'hidden';
            hiddenCategories.name = 'categories';
            hiddenCategories.value = selectedCategories.join(',');
            filterForm.appendChild(hiddenCategories);
        }
        filterForm.querySelectorAll('input[name="categories_cb"]').forEach(cb => cb.disabled = true);

        setTimeout(() => {
            filterForm.querySelectorAll('input[name="genres_cb"]').forEach(cb => cb.disabled = false);
            filterForm.querySelectorAll('input[name="categories_cb"]').forEach(cb => cb.disabled = false);
        }, 0);

    });

</script>
</body>
</html>
